openapi: "3.0.0"
info:
  description: "The data returned by the service describes the activity of a group of animals or individual animals inside a pen"
  title: "livestock_monitoring API"
  version: "1.0.0"
  
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "jacob.livin.stanly@iais.fraunhofer.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
- name: "timeseries_activity"
  description: "***Mandatory*** Endpoint"
 
- name: "discrete_events"
  description: "***Optional*** Endpoint"


paths:
  /livestock/timeseries:
    get:
      tags:
        - "timeseries_activity"
      summary: "Get Livestock Monitoring Activity Entry"
      description: "Returns Time Series which captures the activity pattern of the livestock"
      operationId: "getLiveStockMonitoring"
      
      parameters:
        - in: query
          name: start_time
          schema:
            type: string
          required: true
          description: "in ISO 8601 date/time format"
          example: "2023-01-12T14:00:00.000Z"
        - in: query
          name: end_time
          schema:
            type: string
          required: true
          description: "in ISO 8601 date/time format"
          example: "2023-01-12T14:59:59.000Z"
        - in: query
          name: resolution
          description: "in ISO 8601 duration format" 
          example: "PT20M"         
          schema:
            type: string
          required: true
        - in: query
          name: pen_id
          example: urn:com.fodjan.animal_data:12345
          description: The urn of a monitored pen. Syntax&#58; urn:<service_id>:<internal_id>
          schema:
            type: string
          required: true
        - in: query
          name: activity_type
          example: "eating"
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ActivityType'
          required: false
        
          
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeries'
        400:
          description: Invalid status value
          content: {}
      

  /livestock/discreteEvents:
    get:
      tags:
        - "discrete_events"
      summary: "Get Livestock Discrete Event Entry"
      parameters:
        - in: query
          name: start_time
          required: true
          schema:
            type: string
        - in: query
          name: end_time
          required: true
          schema:
            type: string
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscreteEvents'   
      

components:
  schemas:
    TimeSeries:
      type: array
      items:
        type: object
        required:
        - activity_type
        - unit
        - timeseries
        properties:
          activity_type:
            $ref: '#/components/schemas/ActivityType'
          unit:
            type: string
            "enum": [
              "number_of_animals"
            ]  
          timeseries:
            type: array
            items:
              type: object
              required:
                - date
                - value
              properties:
                date:
                    type: string
                    format: date-time
                confidence:
                    type: number
                value:
                    type: number
                
      example:
        [
          {
            "activity_type": "eating",
            "unit": "number_of_animals",
            "timeseries": [
              {
                "date": "2023-01-12T14:02:00.000Z",
                "confidence": 0.5,
                "value": 15
              },
              {
                "date": "2023-01-12T14:22:00.000Z",
                "confidence": 0.7,
                "value": 10
              },
              {
                "date": "2023-01-12T14:42:00.000Z",
                "confidence": 0.7,
                "value": 13
              }
            ]
          }
        ]
           
            
    ActivityType:
      type: string
      enum: 
        - eating
        - resting
        - movement
            
   
    
    DiscreteEvents:
      required:
        - startTime
        - endTime
        - eventType
        - timeStamp
        - penID
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        confidence:
          type: number
          format: decimal
        eventType:
          type: string
          enum: [
            "biting",
            "coughing",
            "death"
          ]
        timeStamp:
          type: string
          format: date-time
        animalID:
          type: string
          pattern: ^urn:[a-z][a-z0-9_.\-]*:[\w-.]+
          description: Uniform resource name of an object with the syntax urn:<service_id>:<internal_id>. <service_id> must be the urn of a valid and active ATLAS service.
        penID:
          type: string
          pattern: ^urn:[a-z][a-z0-9_.\-]*:[\w-.]+
          description: Uniform resource name of an object with the syntax urn:<service_id>:<internal_id>. <service_id> must be the urn of a valid and active ATLAS service.
        
      

    
