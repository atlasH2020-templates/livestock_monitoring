openapi: "3.0.0"
info:
  description: "The data returned by the service describes the activity of a group of animals or individual animals inside a pen"
  title: "livestock_monitoring API"
  version: "1.0.0"
  
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "jacob.livin.stanly@iais.fraunhofer.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
- name: "timeseries_activity"
  description: "***Mandatory*** Endpoint"
 
- name: "discrete_events"
  description: "***Optional*** Endpoint"


paths:
  /livestock/timeseries:
    get:
      tags:
        - "timeseries_activity"
      summary: "Get Livestock Monitoring Activity Entry"
      description: "Returns Time Series which captures the activity pattern of the livestock"
      operationId: "getLiveStockMonitoring"
      
      parameters:
        - in: query
          name: start_time
          schema:
            type: string
          required: true
        - in: query
          name: end_time
          schema:
            type: string
          required: true
        - in: query
          name: resolution
          schema:
            type: string
          required: true
        - in: query
          name: penID
          schema:
            type: array
          required: true
        - in: query
          name: activity_type
          schema:
            type: array
          required: false
        
          
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LivestockMonitoringTS'
        400:
          description: Invalid status value
          content: {}
      

  /livestock/discreteEvents:
    get:
      tags:
        - "discrete_events"
      summary: "Get Livestock Discrete Event Entry"
      parameters:
        - in: query
          name: start_time
          required: true
          schema:
            type: string
        - in: query
          name: end_time
          required: true
          schema:
            type: string
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LivestockMonitoringDE'   
      

components:
  schemas:
    LivestockMonitoringTS:
      required:
        - timeseries
      type: "object"
      properties:
        timeseries:
          type: array
          items:
            type: object
            properties:
              pen_id:
                type: string
              start_date:
                type: string
                format: date-time
              end_date:
                type: string
                format: date-time
              activity_type:
                type: string
              unit:
                type: string
              timeseries_data:
                type: array
                items:
                  type: object
                  properties:
                    date:
                        type: string
                        format: date-time
                  additionalProperties:
                    type: number
                    format: decimal
                example:
                  ["2020-12-16T01:12:28.414Z" : 15.0, "2020-12-17T01:12:28.414Z" : 16.0]

    # LivestockMonitoringTS:
    #   required:
    #     - startTime
    #     - endTime
    #     - activity
    #     - eatingActivity
    #     - biometricParameters
    #     - penID
    #   type: "object"
    #   properties:
    #     startTime:
    #       type: string
    #       example:
    #         "2020-12-16T01:12:28.414Z"
    #     endTime:
    #       type: string
    #       example:
    #         "2020-12-17T01:12:28.414Z"
    #     description:
    #       type: string
    #     activity:
    #       type: array
    #       items:
    #         type: object
    #         properties:
    #           date:
    #               type: string
    #               format: date-time
    #         additionalProperties:
    #           type: number
    #           format: decimal
    #       example:
    #           ["2020-12-16T01:12:28.414Z" : 15.0, "2020-12-17T01:12:28.414Z" : 16.0]
    #     eatingActivity:
    #       type: array
    #       items:
    #         type: object
    #         properties:
    #           date:
    #             type: string
    #             format: date-time
    #         additionalProperties:
    #           type: number
    #           format: decimal
    #       example:
    #         ["2020-12-16T01:12:28.414Z" : 5, "2020-12-17T01:12:28.414Z" : 10]        
    #     biometricParameters:
    #       $ref: '#/components/schemas/BioMetricParams'
    #     animalID:
    #       type: string
    #       example:
    #     penID:
    #       type: string
    #       example: "ID23"
    
    LivestockMonitoringDE:
      required:
        - confidence
        - startTime
        - endTime
        - eventType
        - timeStamp
        - penID
      type: object
      properties:
        startTime:
          type: string
        endTime:
          type: string
        description:
          type: string
        confidence:
          type: number
          format: decimal
        eventType:
          type: string
        subParameter:
          type: string
        timeStamp:
          type: string
          format: date-time
        animalID:
          type: string
        penID:
          type: string
        
      

    # BioMetricParams:
    #   type: "object"
    #   properties:
    #     aggressionEvents:
    #       type: number
    #       format: integer
    #     temperature:
    #       type: number
    #       format: decimal
    #     weight:
    #       type: number
    #       format: decimal
    #     noiseLevel:
    #       type: number
    #       format: integer
    #     animalSize:
    #       type: number
    #       format: integer
